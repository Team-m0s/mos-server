name: Docker Image CI

on:
  push:
    branches: [ "main" ]

jobs:
  build: 
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3
    
    # Docker 이미지 Build (1)        
    - name: docker image build
      run:
        docker build -f Dockerfile -t ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_REPONAME }} .
    
    # DockerHub Login (2)
    - name: docker login 
      uses: docker/login-action@v2
      with: 
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    # Docker Hub push (3)
    - name: docker Hub push
      run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_REPONAME }}
    
  # 배포
  deploy:
    needs: build # build 후에 실행되도록 정의
    name: Deploy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Deliver File
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.EC2_REMOTE_IP }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          port: 22
          source: "bluegreen/deploy_blue_green.sh,bluegreen/docker-compose.yml"
          target: "/home/ec2-user/"
      # ec2 접속
      - name: Application Run
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_REMOTE_IP }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          port: 22
          script: |
            cd /home/ec2-user/bluegreen
            docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_PASSWORD }}
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_REPONAME }}
            chmod 777 ./deploy_blue_green.sh
            chmod 777 ./docker-compose.yml
            ./deploy_blue_green.sh
            docker image prune -f
            docker system prune --volumes -f
