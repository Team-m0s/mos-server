"""empty message

Revision ID: b2e8eaca7899
Revises: 
Create Date: 2024-03-31 17:24:41.586029

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'b2e8eaca7899'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('admin',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('password', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('board',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('create_date', sa.DateTime(), nullable=False),
    sa.Column('parent_id', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('uuid', sa.String(), nullable=False),
    sa.Column('firebase_uuid', sa.String(), nullable=False),
    sa.Column('provider', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('nickName', sa.String(), nullable=False),
    sa.Column('profile_img', sa.String(), nullable=True),
    sa.Column('introduce', sa.String(), nullable=True),
    sa.Column('point', sa.Integer(), nullable=False),
    sa.Column('lang_level', sa.JSON(), nullable=True),
    sa.Column('register_date', sa.DateTime(), nullable=False),
    sa.Column('report_count', sa.Integer(), nullable=False),
    sa.Column('last_nickname_change', sa.DateTime(), nullable=True),
    sa.Column('suspension_period', sa.DateTime(), nullable=True),
    sa.Column('is_admin', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('accompany',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('city', sa.String(), nullable=False),
    sa.Column('total_member', sa.Integer(), nullable=False),
    sa.Column('leader_id', sa.Integer(), nullable=True),
    sa.Column('introduce', sa.String(), nullable=False),
    sa.Column('activity_scope', sa.Enum('online', 'offline', 'hybrid', name='activityscope'), nullable=False),
    sa.Column('create_date', sa.String(), nullable=False),
    sa.Column('update_date', sa.String(), nullable=False),
    sa.Column('report_count', sa.Integer(), nullable=False),
    sa.Column('category', sa.Enum('activity', 'cultureArt', 'hobby', 'musicInstrument', 'volunteering', 'oneDayClass', 'parentingPet', 'foodTour', 'languageExchange', 'game', 'exerciseSport', 'booksSelfImprovement', 'dating', 'others', 'all', name='category'), nullable=False),
    sa.Column('chat_count', sa.Integer(), nullable=False),
    sa.Column('like_count', sa.Integer(), nullable=False),
    sa.Column('is_closed', sa.Boolean(), nullable=False),
    sa.Column('qna', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['leader_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('post',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('subject', sa.String(), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('like_count', sa.Integer(), nullable=True),
    sa.Column('is_anonymous', sa.Boolean(), nullable=False),
    sa.Column('is_blinded', sa.Boolean(), nullable=False),
    sa.Column('report_count', sa.Integer(), nullable=False),
    sa.Column('create_date', sa.DateTime(), nullable=False),
    sa.Column('modify_date', sa.DateTime(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('board_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['board_id'], ['board.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('accompany_member',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('accompany_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['accompany_id'], ['accompany.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'accompany_id')
    )
    op.create_table('application',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('accompany_id', sa.Integer(), nullable=True),
    sa.Column('answer', sa.String(), nullable=True),
    sa.Column('apply_date', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['accompany_id'], ['accompany.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('bookmark',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('post_id', sa.Integer(), nullable=True),
    sa.Column('create_date', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['post_id'], ['post.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('image',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('image_url', sa.String(), nullable=False),
    sa.Column('image_hash', sa.String(), nullable=False),
    sa.Column('post_id', sa.Integer(), nullable=True),
    sa.Column('accompany_id', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['accompany_id'], ['accompany.id'], ),
    sa.ForeignKeyConstraint(['post_id'], ['post.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('notice',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('content', sa.String(), nullable=False),
    sa.Column('create_date', sa.DateTime(), nullable=False),
    sa.Column('update_date', sa.DateTime(), nullable=True),
    sa.Column('report_count', sa.Integer(), nullable=False),
    sa.Column('accompany_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['accompany_id'], ['accompany.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tag',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('accompany_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['accompany_id'], ['accompany.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('comment',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('parent_id', sa.Integer(), nullable=True),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('like_count', sa.Integer(), nullable=True),
    sa.Column('create_date', sa.DateTime(), nullable=False),
    sa.Column('modify_date', sa.DateTime(), nullable=True),
    sa.Column('is_anonymous', sa.Boolean(), nullable=False),
    sa.Column('is_blinded', sa.Boolean(), nullable=False),
    sa.Column('report_count', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('post_id', sa.Integer(), nullable=True),
    sa.Column('notice_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['notice_id'], ['notice.id'], ),
    sa.ForeignKeyConstraint(['post_id'], ['post.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('like',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('post_id', sa.Integer(), nullable=True),
    sa.Column('comment_id', sa.Integer(), nullable=True),
    sa.Column('accompany_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['accompany_id'], ['accompany.id'], ),
    sa.ForeignKeyConstraint(['comment_id'], ['comment.id'], ),
    sa.ForeignKeyConstraint(['post_id'], ['post.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('report',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('report_reason_enum', sa.Enum('hateSpeech', 'offTopic', 'repeatedPosts', 'promotionalContent', 'inappropriateProfile', 'privacyViolation', 'adultContent', 'other', name='reportreason'), nullable=True),
    sa.Column('report_reason_string', sa.String(), nullable=True),
    sa.Column('reporter_id', sa.Integer(), nullable=True),
    sa.Column('post_id', sa.Integer(), nullable=True),
    sa.Column('comment_id', sa.Integer(), nullable=True),
    sa.Column('accompany_id', sa.Integer(), nullable=True),
    sa.Column('notice_id', sa.Integer(), nullable=True),
    sa.Column('reported_user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['accompany_id'], ['accompany.id'], ),
    sa.ForeignKeyConstraint(['comment_id'], ['comment.id'], ),
    sa.ForeignKeyConstraint(['notice_id'], ['notice.id'], ),
    sa.ForeignKeyConstraint(['post_id'], ['post.id'], ),
    sa.ForeignKeyConstraint(['reported_user_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['reporter_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('report')
    op.drop_table('like')
    op.drop_table('comment')
    op.drop_table('tag')
    op.drop_table('notice')
    op.drop_table('image')
    op.drop_table('bookmark')
    op.drop_table('application')
    op.drop_table('accompany_member')
    op.drop_table('post')
    op.drop_table('accompany')
    op.drop_table('user')
    op.drop_table('board')
    op.drop_table('admin')
    # ### end Alembic commands ###
