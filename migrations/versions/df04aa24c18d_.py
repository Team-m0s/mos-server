"""empty message

Revision ID: df04aa24c18d
Revises: c5c2d118c299
Create Date: 2024-02-14 17:14:33.997000

"""
from typing import Sequence, Union
from sqlalchemy.engine.reflection import Inspector

from alembic import op
import sqlalchemy as sa

# revision identifiers, used by Alembic.
revision: str = 'df04aa24c18d'
down_revision: Union[str, None] = 'c5c2d118c299'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


# def upgrade() -> None:
#     # ### commands auto generated by Alembic - please adjust! ###
#     op.add_column('image', sa.Column('post_id', sa.Integer(), nullable=True))
#     op.create_foreign_key(None, 'image', 'post', ['post_id'], ['id'])
#     # ### end Alembic commands ###
#
#
# def downgrade() -> None:
#     # ### commands auto generated by Alembic - please adjust! ###
#     op.drop_constraint(None, 'image', type_='foreignkey')
#     op.drop_column('image', 'post_id')
#     # ### end Alembic commands ###

def upgrade():
    # SQLite 데이터베이스를 위한 배치 모드 사용
    with op.batch_alter_table('image', schema=None) as batch_op:
        # Inspector 객체를 사용하여 'Image' 테이블에 'post_id' 컬럼이 이미 존재하는지 확인
        inspector = Inspector.from_engine(op.get_bind())
        columns = [col['name'] for col in inspector.get_columns('image')]
        if 'post_id' not in columns:
            batch_op.add_column(sa.Column('post_id', sa.Integer(), nullable=True))
            batch_op.create_foreign_key('fk_post_id', 'post', ['post_id'], ['id'])


def downgrade():
    with op.batch_alter_table('image', schema=None) as batch_op:
        # ForeignKeyConstraint 객체의 이름을 사용하여 외래 키 제약 조건을 제거
        batch_op.drop_constraint('fk_post_id', type_='foreignkey')
        batch_op.drop_column('post_id')
